import VeiculoService from './VeiculoService';
import ServiceUtils from "./ServiceUtils";

jest.mock('./ServiceUtils', () => jest.fn());

ServiceUtils.getJWT = jest.fn(() => "foo");

ServiceUtils.getAPIHost = jest.fn(() => "bar");

// ServiceUtils.handleResponse = jest.fn(() => Promise.resolve({}));

ServiceUtils.handleResponse = jest.fn(() => new Promise((s, j) => s("foo")));

global.fetch = jest.fn(() => Promise.resolve({
  json: () => Promise.resolve("foo"),
}));

beforeEach(() => {
  fetch.mockClear();
});

describe('Service VeiculoService', () => {
  it('Deve retornar o dashboard', () => {
    return expect(VeiculoService.dashboard()).resolves.toBeDefined();
  });


  it('Deve cadastrar um veÃ­culo', () => {
    return expect(VeiculoService.cadastrar("foo")).resolves.toBeDefined();
  });

});

